package cs211;
import java.awt.Color;

import processing.core.PApplet;
import processing.core.PImage;
public class ImageProcessing extends PApplet {
	PImage img;
	PImage result;
	HScrollbar thresholdBar;
	
	public void setup() { 
		size(800, 600);
		thresholdBar = new HScrollbar ( this , (float)0 ,(float) 580 , (float)800 , (float)20 ) ;
		img = loadImage("board1.jpg");
		result = createImage(width, height, RGB);
		// create a new, initially transparent, 'result' image 
		
		//noLoop(); // no interactive behaviour: draw() will be called only once. 
	}
	public void draw() {
		
		background(color(0,0,0));
		System.out.println(brightness(result.pixels[33]));
		changeImage2();
		image(result, 0, 0);
		thresholdBar.display();
		thresholdBar.update();
		
	}	
	public void changeImage () {
		result.loadPixels();
		for(int i = 0; i < img.width * img.height; i++) {
			if ( brightness(img.pixels[i]) > thresholdBar.getPos()*255) {
				result.pixels[i]= Color.black.getRGB() ;
			} else {
				result.pixels[i]= Color.white.getRGB() ;
			}
			
		}
		result.updatePixels();
	}
	
	public void changeImage2 () {
		result.loadPixels();
		for(int i = 0; i < img.width * img.height; i++) {
			if ( hue(img.pixels[i]) > 120 && hue(img.pixels[i]) < 150){
				result.pixels[i]= img.pixels[i];
			} else {
				result.pixels[i]= Color.black.getRGB() ;
			}
			
		}
		result.updatePixels();
	}
	
}
